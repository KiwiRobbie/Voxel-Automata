#version 460 core
layout(local_size_x = 1, local_size_y = 1,local_size_z = 1) in;


struct VtxData {
   vec3  pos;
   float state;   
};   

layout (std140, binding = 2) buffer VertexBuffer {
   VtxData verts[];
};
layout (std140, binding = 1) buffer OutputBuffer {
   VtxData result[];
};


uniform float time;
uniform bool swapped;

void main() {
	uvec3 loc =  gl_GlobalInvocationID.xyz;
	uvec3 size = gl_NumWorkGroups.xyz;
	uint index = loc.x + size.x*loc.y + size.x*size.y*loc.z;
	result[index]=verts[index];

}