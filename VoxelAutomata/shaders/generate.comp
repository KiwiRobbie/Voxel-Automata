#version 460 core
layout(local_size_x = 1, local_size_y = 1,local_size_z = 1) in;


struct VtxData {
   vec3  pos;
   float state;   
};   

layout (std140, binding = 1) buffer VertexBuffer {
   VtxData verts[];
};

uniform float time;

float random (vec2 st) {
    return fract(sin(dot(st.xy,
                         vec2(12.9898,78.233)))*
        43758.5453123);
}

void main() {
	uvec3 loc =  gl_GlobalInvocationID.xyz;
	uvec3 size = gl_NumWorkGroups.xyz;
	uint index = loc.x + size.x*loc.y + size.x*size.y*loc.z;
	verts[index].pos=vec3(loc);
	verts[index].state=float(dot(vec3(loc)-32,vec3(loc)-32)<100);
}